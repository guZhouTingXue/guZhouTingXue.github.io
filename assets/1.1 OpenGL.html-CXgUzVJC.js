import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as t,o as a}from"./app-b_BasNDO.js";const n={};function l(h,i){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="_1-1-opengl" tabindex="-1"><a class="header-anchor" href="#_1-1-opengl"><span>1.1 OpenGL</span></a></h1><blockquote><p>The OpenGL specification specifies exactly what the result/output of each function should be and how it should perform.</p></blockquote><p>OpenGL 是由 <a href="https://www.khronos.org/" target="_blank" rel="noopener noreferrer">The Khronos Group</a>制定并维护的规范。规范指定了function 的接口形式以及功能，具体的函数实现由库的提供者完成，规范不作限制。</p><h2 id="core-profile-vs-immediate-mode" tabindex="-1"><a class="header-anchor" href="#core-profile-vs-immediate-mode"><span>Core-profile vs Immediate mode</span></a></h2><table><thead><tr><th>mode</th><th>特点</th><th>版本</th></tr></thead><tbody><tr><td>immediate mode（fixed function pipeline）</td><td>easy-to-use method</td><td>0.0~3.2</td></tr><tr><td>core-profile</td><td>灵活（more control over graphics）、高效</td><td>3.3~now</td></tr></tbody></table><h2 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions"><span>Extensions</span></a></h2><p>OpenGL 支持扩展，任何显卡厂商的特有技术都可以通过扩展进行使用。</p><h2 id="state-machine" tabindex="-1"><a class="header-anchor" href="#state-machine"><span>State machine</span></a></h2><blockquote><p>[!quote]<br> OpenGL is by itself a large state machine: a collection of variables that define how OpenGL should currently operate. The state of OpenGL is commonly referred to as the OpenGL context.</p></blockquote><p>由绘制triangles 更改为绘制 lines：修改当前状态，调用绘制函数</p><ul><li>绘制的形状由一个状态控制</li><li>状态更新后在下次使用时生效</li><li>要在多个状态下绘制时需要在状态之间进行切换</li></ul><h2 id="objects" tabindex="-1"><a class="header-anchor" href="#objects"><span>Objects</span></a></h2><blockquote><p>[!quote]<br> An object in OpenGL is a collection of options that represents a subset of OpenGL&#39;s state.</p></blockquote><p>OpenGL 库是用C编写的，将一组关联的状态提取出来组成一个对象，每次操作都是针对单个对象（一组状态），方便设置。<br> 对象相当于是C中的结构体<br> 整个OpenGL的所有状态就是对象的集合<br> 关系：对象是状态的集合-》context 是对象的集合<br> c代码近似：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> object_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> option1;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> option2;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//The State of OpenGL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> OpenGL_Context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	object_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">object_Window_Target;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用OpenGL绘制一个窗口的步骤：</p><ol><li>创建一个窗口对象</li><li>设置对象的参数</li><li>绑定到OpenGL中</li><li>绘制</li><li>恢复默认<br> 实现：</li></ol><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// create object</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unsigned</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> objectId </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">glGenObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">objectId);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// bind/assign object to context</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">glBindObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GL_WINDOW_TARGET, objectId);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// set options of object currently bound to GL_WINDOW_TARGET</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">glSetObjectOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GL_WINDOW_TARGET, GL_OPTION_WINDOW_WIDTH,  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">800</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">glSetObjectOption</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GL_WINDOW_TARGET, GL_OPTION_WINDOW_HEIGHT, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// set context target back to default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">glBindObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GL_WINDOW_TARGET, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>行号</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td>1、2</td><td>创建object</td><td>the real object&#39;s data is stored behind the scenes.通过id引用该object。</td></tr><tr><td>5</td><td>绑定object</td><td>bind 相当于替换（所以如果要在两个object之间切换需要同时保存它们的object，否则只能恢复到默认状态）</td></tr><tr><td>7、8</td><td>设置窗口宽、高</td><td>没办法直接设置object的值，object 的具体定义对用户是隐藏的，具体的实现在源文件中，头文件只提供了操作的接口声明。</td></tr><tr><td>10</td><td>恢复默认</td><td></td></tr></tbody></table>`,19)]))}const d=s(n,[["render",l]]),o=JSON.parse('{"path":"/LearnOpenGL/1.1%20OpenGL.html","title":"1.1 OpenGL","lang":"zh-CN","frontmatter":{"category":"LearnOpenGL","description":"1.1 OpenGL The OpenGL specification specifies exactly what the result/output of each function should be and how it should perform. OpenGL 是由 The Khronos Group制定并维护的规范。规范指定了funct...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.1 OpenGL\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-08T13:33:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/LearnOpenGL/1.1%20OpenGL.html"}],["meta",{"property":"og:title","content":"1.1 OpenGL"}],["meta",{"property":"og:description","content":"1.1 OpenGL The OpenGL specification specifies exactly what the result/output of each function should be and how it should perform. OpenGL 是由 The Khronos Group制定并维护的规范。规范指定了funct..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-08T13:33:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-08T13:33:52.000Z"}]]},"git":{"createdTime":1758539203000,"updatedTime":1759930432000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":2,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"LearnOpenGL/1.1 OpenGL.md","excerpt":"","autoDesc":true}');export{d as comp,o as data};
