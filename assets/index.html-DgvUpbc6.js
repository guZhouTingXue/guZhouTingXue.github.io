import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as i,a as t,f as e,w as d,r as s,o as p,e as r}from"./app-b_BasNDO.js";const a={};function g(m,l){const n=s("RouteLink");return p(),o("div",null,[l[26]||(l[26]=i('<h1 id="design-patterns" tabindex="-1"><a class="header-anchor" href="#design-patterns"><span>Design Patterns</span></a></h1><p>参考教程：<br><a href="https://refactoring.guru/design-patterns/catalog?_gl=1*1aybz2x*_ga*MTI1ODAzODczNC4xNzMwNDc0Mjcy*_ga_SR8Y3GYQYC*czE3NTQ3NDc4NzgkbzM2JGcwJHQxNzU0NzQ3ODc4JGo2MCRsMCRoMA.." target="_blank" rel="noopener noreferrer">重构大师</a>：包含23种设计模式。每种模式的介绍结构：</p><ul><li>intent：简要介绍模式的分类，特点</li><li>problem：现实问题</li><li>solution：如何应用模式解决问题</li><li>structure：类图</li><li>pseudocode：实现模式的伪代码</li><li>applicability：模式适用范围，哪些情况下应该使用，哪些情况下避免使用</li><li>How to Implement：实现模式代码的概括性流程说明</li><li>pros and cons：优缺点列举</li><li>relations with other patterns：模式之间的区别与联系</li><li>code examples：各种语言实现示例</li></ul><p><a href="https://design-patterns.readthedocs.io/zh-cn/latest/index.html" target="_blank" rel="noopener noreferrer">图说设计模式</a></p><p>纸质书：Head First 设计模式</p>',5)),t("table",null,[l[25]||(l[25]=t("thead",null,[t("tr",null,[t("th",null,"序号"),t("th",null,"标题"),t("th",null,"模式"),t("th",null,"类型"),t("th",null,"中文名"),t("th",null,"链接"),t("th",null,"状态")])],-1)),t("tbody",null,[t("tr",null,[l[1]||(l[1]=t("td",null,"1",-1)),l[2]||(l[2]=t("td",null,"欢迎来到设计模式世界",-1)),l[3]||(l[3]=t("td",null,"Strategy",-1)),l[4]||(l[4]=t("td",null,null,-1)),l[5]||(l[5]=t("td",null,"策略",-1)),t("td",null,[e(n,{to:"/Design%20Patterns/Strategy%20-%20%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%A5%E9%97%A8.html"},{default:d(()=>l[0]||(l[0]=[r("Strategy - 设计模式入门",-1)])),_:1,__:[0]})]),l[6]||(l[6]=t("td",null,"已完成",-1))]),t("tr",null,[l[8]||(l[8]=t("td",null,"2",-1)),l[9]||(l[9]=t("td",null,"让你的对象知悉现况",-1)),l[10]||(l[10]=t("td",null,"Observer（Event-Subscriber，Listener）",-1)),l[11]||(l[11]=t("td",null,null,-1)),l[12]||(l[12]=t("td",null,"观察者模式",-1)),t("td",null,[e(n,{to:"/Design%20Patterns/Observer.html"},{default:d(()=>l[7]||(l[7]=[r("Observer",-1)])),_:1,__:[7]})]),l[13]||(l[13]=t("td",null,"进行中",-1))]),l[14]||(l[14]=t("tr",null,[t("td",null,"3"),t("td",null,"装饰对象"),t("td"),t("td"),t("td",null,"装饰者模式"),t("td"),t("td")],-1)),l[15]||(l[15]=t("tr",null,[t("td",null,"4"),t("td",null,"烘烤OO的精华"),t("td"),t("td"),t("td",null,"工厂模式"),t("td"),t("td")],-1)),l[16]||(l[16]=t("tr",null,[t("td",null,"5"),t("td",null,"独一无二的对象"),t("td"),t("td"),t("td",null,"单件模式"),t("td"),t("td")],-1)),l[17]||(l[17]=t("tr",null,[t("td",null,"6"),t("td",null,"封装调用"),t("td"),t("td"),t("td",null,"命令模式"),t("td"),t("td")],-1)),l[18]||(l[18]=t("tr",null,[t("td",null,"7"),t("td",null,"随遇而安"),t("td"),t("td"),t("td",null,"适配器模式 与 外观模式"),t("td"),t("td")],-1)),l[19]||(l[19]=t("tr",null,[t("td",null,"8"),t("td",null,"封装算法"),t("td"),t("td"),t("td",null,"模板方法模式"),t("td"),t("td")],-1)),l[20]||(l[20]=t("tr",null,[t("td",null,"9"),t("td",null,"管理良好的集合"),t("td"),t("td"),t("td",null,"迭代器与组合模式"),t("td"),t("td")],-1)),l[21]||(l[21]=t("tr",null,[t("td",null,"10"),t("td",null,"事物的状态"),t("td"),t("td"),t("td",null,"状态模式"),t("td"),t("td")],-1)),l[22]||(l[22]=t("tr",null,[t("td",null,"11"),t("td",null,"控制对象访问"),t("td"),t("td"),t("td",null,"代理模式"),t("td"),t("td")],-1)),l[23]||(l[23]=t("tr",null,[t("td",null,"12"),t("td",null,"模式中的模式"),t("td"),t("td"),t("td",null,"复合模式"),t("td"),t("td")],-1)),l[24]||(l[24]=t("tr",null,[t("td",null,"13"),t("td",null,"真实世界中的模式"),t("td"),t("td"),t("td"),t("td"),t("td")],-1))])])])}const f=u(a,[["render",g]]),D=JSON.parse('{"path":"/Design%20Patterns/","title":"Design Patterns","lang":"zh-CN","frontmatter":{"category":"DesignPatterns","description":"Design Patterns 参考教程： 重构大师：包含23种设计模式。每种模式的介绍结构： intent：简要介绍模式的分类，特点 problem：现实问题 solution：如何应用模式解决问题 structure：类图 pseudocode：实现模式的伪代码 applicability：模式适用范围，哪些情况下应该使用，哪些情况下避免使用 Ho...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Design Patterns\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-25T15:16:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/Design%20Patterns/"}],["meta",{"property":"og:title","content":"Design Patterns"}],["meta",{"property":"og:description","content":"Design Patterns 参考教程： 重构大师：包含23种设计模式。每种模式的介绍结构： intent：简要介绍模式的分类，特点 problem：现实问题 solution：如何应用模式解决问题 structure：类图 pseudocode：实现模式的伪代码 applicability：模式适用范围，哪些情况下应该使用，哪些情况下避免使用 Ho..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-25T15:16:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-25T15:16:27.000Z"}]]},"git":{"createdTime":1754836053000,"updatedTime":1758813387000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":4,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"Design Patterns/README.md","excerpt":"","autoDesc":true}');export{f as comp,D as data};
