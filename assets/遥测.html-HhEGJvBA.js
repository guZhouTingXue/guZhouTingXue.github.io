import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as e,f as k,w as t,r,o as A,a as s,e as a}from"./app-YFtLdsYh.js";const c="/assets/%E9%81%A5%E6%B5%8B-BpCBNp9K.webp",g="/assets/%E9%81%A5%E6%B5%8B-1-Bnq61xDs.webp",B={};function o(y,i){const h=r("Tabs");return A(),p("div",null,[i[4]||(i[4]=e('<h1 id="遥测" tabindex="-1"><a class="header-anchor" href="#遥测"><span>遥测</span></a></h1><p>遥测量的分类：</p><blockquote><p>[!quote]<br> 归一化值、标度化值需在主站乘以响应的系数，主站端将变电站的上送的码值乘以相应的系数才是该遥测量的实际值；其中归一化值按照满码值计算系数、标度化值按倍数计算系数、短浮点数不需要乘以系数。</p></blockquote><p>不处理系数</p><h3 id="asdu的结构" tabindex="-1"><a class="header-anchor" href="#asdu的结构"><span>ASDU的结构</span></a></h3><h2 id="vsq-可变结构限定词" tabindex="-1"><a class="header-anchor" href="#vsq-可变结构限定词"><span>VSQ 可变结构限定词</span></a></h2><p>variable structure qualifier</p><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>含义</td><td>SQ</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>SQ表示ASDU中的信息元素（每个有含义的值）的地址获取方式<br> 剩下的bit1-bit7是信息元素的数量</p><p>SQ:0</p><blockquote><p>[!quote]<br> ”表示由信息对象地址寻址的单个信息元素或综合信息元素，应用服务数据单元可以由一个或多个同类的信息对象组成“</p></blockquote><p>每个元素的地址由元素自身给定。地址可以不连续，也可以连续。</p><p>SQ:1</p><blockquote><p>[!quote]<br> &quot;表示同类的信息元素序列（即同一种格式的测量值），由信息对象地址来寻址，信息对象地址是顺序信息元素的第一个信息元素地址，后续信息元素的地址是从这个地址起顺序加1，在顺序信息元素的情况下每个应用服务数据单元仅安排一种信息对象&quot;</p></blockquote><p>给定第一个元素的地址，后续元素的地址根据序号在第一个元素的地址上累加。</p>',15)),k(h,{data:[{id:"SQ 为0的示例"},{id:"SQ:1 的示例"}]},{title0:t(({value:n,isActive:l})=>i[0]||(i[0]=[a("SQ 为0的示例",-1)])),title1:t(({value:n,isActive:l})=>i[1]||(i[1]=[a("SQ:1 的示例",-1)])),tab0:t(({value:n,isActive:l})=>i[2]||(i[2]=[s("p",null,[a("来源：iec104.pcap"),s("br"),s("img",{src:c,alt:"|327x293",loading:"lazy"}),s("br"),a(" 共包含4个元素。")],-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"元素序号"),s("th",null,"IOA"),s("th",null,"报文")])]),s("tbody",null,[s("tr",null,[s("td",null,"0"),s("td",null,"11"),s("td",null,"0b 00 00")]),s("tr",null,[s("td",null,"1"),s("td",null,"12"),s("td",null,"0c 00 00")]),s("tr",null,[s("td",null,"2"),s("td",null,"13"),s("td",null,"0d 00 00")]),s("tr",null,[s("td",null,"3"),s("td",null,"14"),s("td",null,"0e 00 00")])])],-1)])),tab1:t(({value:n,isActive:l})=>i[3]||(i[3]=[s("p",null,[a("来源：IEC104_SQ.pcapng"),s("br"),s("img",{src:g,alt:"|310x245",loading:"lazy"})],-1),s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"元素序号"),s("th",null,"IOA"),s("th",null,"报文")])]),s("tbody",null,[s("tr",null,[s("td",null,"0"),s("td",null,"32"),s("td",null,"20 00 00")]),s("tr",null,[s("td",null,"1"),s("td",null,"33"),s("td",null,"NULL")])])],-1)])),_:1}),i[5]||(i[5]=e(`<h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h3><p>判断是否连续：可变结构限定词字节的最高位是否为1</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_isSequence</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_ASDU self)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    else</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取信息元素数量：取剩余7位表示的值</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getNumberOfElements</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_ASDU self)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cot-传输原因" tabindex="-1"><a class="header-anchor" href="#cot-传输原因"><span>COT 传输原因</span></a></h2><p>cause of transimission</p><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>含义</td><td>Test</td><td>Negative</td><td>-</td><td>-</td><td>CauseTx</td><td>-</td><td>-</td><td>-</td></tr><tr><td>含义</td><td>-</td><td>-</td><td>-</td><td>-</td><td>OA</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><p>Test: 是否为测试状态<br> Negative：是否响应命令，用在被控站响应遥控命令的回复中<br> CauseTx：传输原因<br> OA：源发地址，用来标识控制站中发起该命令的客户端（调度员）。</p><p>COT 可配置为1字节-不包含OA，或2字节-包含OA</p><h3 id="causetx" tabindex="-1"><a class="header-anchor" href="#causetx"><span>CauseTx</span></a></h3><p>只关心下表中的原因：</p><table><thead><tr><th>值</th><th>名称</th><th>含义</th><th>对应库中的枚举定义</th></tr></thead><tbody><tr><td>1</td><td>per/cyc</td><td>周期/循环</td><td>CS101_COT_PERIODIC</td></tr><tr><td>3</td><td>spont</td><td>突发</td><td>CS101_COT_SPONTANEOUS</td></tr><tr><td>4</td><td>init</td><td>初始化</td><td>CS101_COT_INITIALIZED</td></tr><tr><td>5</td><td>req</td><td>请求/被请求</td><td>CS101_COT_REQUEST</td></tr><tr><td>6</td><td>act</td><td>激活</td><td>CS101_COT_ACTIVATION</td></tr><tr><td>7</td><td>actcon</td><td>激活确认</td><td>CS101_COT_ACTIVATION_CON</td></tr><tr><td>8</td><td>deact</td><td>停止激活</td><td>CS101_COT_DEACTIVATION</td></tr><tr><td>9</td><td>deactcon</td><td>停止激活确认</td><td>CS101_COT_DEACTIVATION_CON</td></tr><tr><td>10</td><td>actterm</td><td>激活终止</td><td>CS101_COT_ACTIVATION_TERMINATION</td></tr><tr><td>20</td><td>introgen</td><td>响应站总召</td><td>CS101_COT_INTERROGATED_BY_STATION</td></tr></tbody></table><h3 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1"><span>实现</span></a></h3><p>获取CauseTx的接口：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CS101_CauseOfTransmission</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getCOT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_ASDU self)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (CS101_CauseOfTransmission) (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addr-asdu-公共地址" tabindex="-1"><a class="header-anchor" href="#addr-asdu-公共地址"><span>addr ASDU 公共地址</span></a></h2><p>也叫站地址，标识被控站点。<br> 可配置为1或2字节。标准要求为2字节</p><h3 id="实现-2" tabindex="-1"><a class="header-anchor" href="#实现-2"><span>实现</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getCA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_ASDU self)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> caIndex </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfCOT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ca </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[caIndex];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfCA</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ca </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[caIndex </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ca;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>确定addr的字节序号 TypeId（1） + VSQ(1) + COT（1 或 2）</li><li>如果addr 配置为2字节，取第二个字节左移8位（乘以2的8次方）后与第一个字节相加，得到最终addr</li></ol><h2 id="ioa-信息体对象地址" tabindex="-1"><a class="header-anchor" href="#ioa-信息体对象地址"><span>IOA 信息体对象地址</span></a></h2><p>information object address<br> 可配置为1~3字节，标准要求为3字节</p><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>结构化</td><td>地址信息按预先规定的结构划分，可能的结构：【功能】【装置地址】【信号】</td></tr><tr><td>非结构化</td><td>地址仅代表对象编号，具体对应的设备需要配合外部点表</td></tr></tbody></table><h3 id="实现-3" tabindex="-1"><a class="header-anchor" href="#实现-3"><span>实现</span></a></h3><p>解析：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs101_information_objects.c"><span>cs101_information_objects.c</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InformationObject_ParseObjectAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_AppLayerParameters parameters, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> uint8_t*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> startIndex)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    /* parse information object address */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg [startIndex];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfIOA</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ioa </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (msg [startIndex </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfIOA</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ioa </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (msg [startIndex </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>startIndex: IOA起始下标<br> 如果ioa长度是1字节，那么ioa 就是 报文中startIndex 处的值。<br> 大于1字节就将多的字节拼接到高位。<br> 获取：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs101_information_objects.c"><span>cs101_information_objects.c</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InformationObject_getObjectAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(InformationObject self)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">objectAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="qds-品质描述词" tabindex="-1"><a class="header-anchor" href="#qds-品质描述词"><span>QDS 品质描述词</span></a></h2><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>含义</td><td>IV</td><td>NT</td><td>SB</td><td>BL</td><td>-</td><td>RES</td><td>-</td><td>OV</td></tr><tr><td>名称</td><td>Invalid</td><td>Not Topical</td><td>Substituted</td><td>Blocked</td><td></td><td></td><td></td><td>overflow</td></tr><tr><td>说明</td><td>数据无效（未正确采集到数据，数据不可用）</td><td>非当前值（指定时间内刷新，超时未刷新则为非当前值）</td><td>取代（数据是自动采集的真实数据还是手动输入或预设值）</td><td>闭锁</td><td></td><td>保留</td><td></td><td>溢出（超出预定义范围）</td></tr></tbody></table><p>值为1表示肯定，0表示否定。正常情况下值为0</p><h3 id="实现-4" tabindex="-1"><a class="header-anchor" href="#实现-4"><span>实现</span></a></h3><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs101_information_objects.h"><span>cs101_information_objects.h</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QualityDescriptor</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SinglePointInformation_getQuality</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SinglePointInformation self);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QualityDescriptor</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DoublePointInformation_getQuality</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(DoublePointInformation self);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">QualityDescriptor</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">StepPositionInformation_getQuality</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(StepPositionInformation self);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>有的类型元素带有品质，有的不带，所以在每种类型的实现中获取</p><h2 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数"><span>浮点数</span></a></h2><table><thead><tr><th>bit</th><th>31</th><th>30~24</th><th>23~0</th></tr></thead><tbody><tr><td>含义</td><td>符号位</td><td>指数</td><td>小数</td></tr></tbody></table><h2 id="示例-处理测量值-短浮点数" tabindex="-1"><a class="header-anchor" href="#示例-处理测量值-短浮点数"><span>示例 处理测量值，短浮点数</span></a></h2><ol><li>ASDU回调处理函数：</li></ol><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bool</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">asduReceivedHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameter, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> address, CS101_ASDU asdu);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS104_Connection_setASDUReceivedHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con, asduReceivedHandler, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>解析：</li></ol><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getTypeID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> M_ME_NC_1) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS101_ASDU_getNumberOfElements</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu); i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            MeasuredValueShort io </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                (MeasuredValueShort) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu, i);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> value </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> MeasuredValueShort_getValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((MeasuredValueShort) io);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            MeasuredValueShort_destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(io);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>行号</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>判断asdu 类型</td><td></td></tr><tr><td>3-5</td><td>获取信息元素</td><td></td></tr><tr><td>6</td><td>获取遥测值</td><td></td></tr><tr><td>7</td><td>释放内存</td><td>会使用malloc 创建对象，解析完毕后需要释放内存</td></tr></tbody></table>`,43))])}const v=d(B,[["render",o]]),m=JSON.parse('{"path":"/IEC%2060870-5-104/%E9%81%A5%E6%B5%8B.html","title":"遥测","lang":"zh-CN","frontmatter":{"category":"IEC 60870-5-104","description":"遥测 遥测量的分类： [!quote] 归一化值、标度化值需在主站乘以响应的系数，主站端将变电站的上送的码值乘以相应的系数才是该遥测量的实际值；其中归一化值按照满码值计算系数、标度化值按倍数计算系数、短浮点数不需要乘以系数。 不处理系数 ASDU的结构 VSQ 可变结构限定词 variable structure qualifier SQ表示ASDU中...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"遥测\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-24T15:40:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/IEC%2060870-5-104/%E9%81%A5%E6%B5%8B.html"}],["meta",{"property":"og:title","content":"遥测"}],["meta",{"property":"og:description","content":"遥测 遥测量的分类： [!quote] 归一化值、标度化值需在主站乘以响应的系数，主站端将变电站的上送的码值乘以相应的系数才是该遥测量的实际值；其中归一化值按照满码值计算系数、标度化值按倍数计算系数、短浮点数不需要乘以系数。 不处理系数 ASDU的结构 VSQ 可变结构限定词 variable structure qualifier SQ表示ASDU中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T15:40:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T15:40:41.000Z"}]]},"git":{"createdTime":1756050041000,"updatedTime":1756050041000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":1,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":4.57,"words":1371},"filePathRelative":"IEC 60870-5-104/遥测.md","excerpt":"","autoDesc":true}');export{v as comp,m as data};
