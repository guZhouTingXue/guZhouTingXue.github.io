import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as e,f as a,d as n,r as t,o}from"./app-BVFJhkBn.js";const p={};function c(g,s){const i=t("Mermaid"),r=t("Tabs");return o(),d("div",null,[s[0]||(s[0]=e("h1",{id:"state-diagrams",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#state-diagrams"},[e("span",null,"State diagrams")])],-1)),a(i,{code:"eJzT1dXlKsksyUm1UgjOzC3ISVUoTgRRXCCJ4pLEklSXzMT0osRc3TIjLgUgiNaKVdDVtVMILsnMyQGLgFlgMaAcF5qQb35ZZl46WBDCRNOMJOhclFicARYEsxAmAgD9ACzC"}),s[1]||(s[1]=e("h2",{id:"states",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#states"},[e("span",null,"States")])],-1)),s[2]||(s[2]=e("p",null,"定义状态的三种方式：",-1)),s[3]||(s[3]=e("ol",null,[e("li",null,"直接定义状态名称：stateName"),e("li",null,'state "description" as stateName'),e("li",null,"stateName : description")],-1)),a(r,{data:[]}),s[4]||(s[4]=n(`<h2 id="transitions" tabindex="-1"><a class="header-anchor" href="#transitions"><span>Transitions</span></a></h2><blockquote><p>[!quote]<br> Transitions are path/edges when one state passes into another. This is represented using text arrow, &quot;--&gt;&quot;.</p></blockquote><p>实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>stateDiagram-v2</span></span>
<span class="line"><span> s1 --&gt; s2: A transition</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p>`,5)),a(i,{code:"eJwrLkksSXXJTEwvSszVLTPiUig2VNDVtVMoNrJScFQoKUrMK84syczP4wIAGFINBw=="}),s[5]||(s[5]=n(`<h2 id="start-and-end" tabindex="-1"><a class="header-anchor" href="#start-and-end"><span>Start and End</span></a></h2><p>标识状态的起点和终点<br> 实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>stateDiagram-v2</span></span>
<span class="line"><span>[*]--&gt;s1</span></span>
<span class="line"><span>s1--&gt;[*]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[*]：如果它指向一个状态那么它就是该状态的起点，如果它被指向，那么就是终点。<br> 效果：</p>`,4)),a(i,{code:"eJwrLkksSXXJTEwvSszVLTPiitaK1dW1KzbkKjYE0kAeFwDHWAoG"}),s[6]||(s[6]=n(`<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><p>对状态的补充说明<br> 语法：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>note &lt;position&gt; state</span></span>
<span class="line"><span>	content</span></span>
<span class="line"><span>end note</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>position:</p><ol><li>right of</li><li>left of</li></ol><p>实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>stateDiagram-v2</span></span>
<span class="line"><span> s1--&gt;s2</span></span>
<span class="line"><span>note right of s1</span></span>
<span class="line"><span>	this is a note</span></span>
<span class="line"><span>end note</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p>`,8)),a(i,{code:"eJwrLkksSXXJTEwvSszVLTPiUig21NW1KzbiyssvSVUoykzPKFHITwOKcnGWZGQWKwBRogJIjis1LwXCAADr5hWt"}),s[7]||(s[7]=n(`<h2 id="direction-of-diagram" tabindex="-1"><a class="header-anchor" href="#direction-of-diagram"><span>Direction of diagram</span></a></h2><p>默认的状态转换显示为从上至下，可以指定方向</p><p>实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>stateDiagram-v2</span></span>
<span class="line"><span>	direction LR </span></span>
<span class="line"><span>	[*]--&gt;A</span></span>
<span class="line"><span>	A--&gt;B</span></span>
<span class="line"><span>	B--&gt;[*]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p>`,5)),a(i,{code:"eJwrLkksSXXJTEwvSszVLTPi4kzJLEpNLsnMz1PwCVLg4ozWitXVtXPk4nQEUk5cnE5ACijGBQD2ew8z"})])}const u=l(p,[["render",c]]),b=JSON.parse('{"path":"/%E5%B7%A5%E5%85%B7/State%20diagrams.html","title":"State diagrams","lang":"zh-CN","frontmatter":{"category":"工具","tags":["Mermaid","StateDiagrams"],"description":"State diagrams States 定义状态的三种方式： 直接定义状态名称：stateName state \\"description\\" as stateName stateName : description Transitions [!quote] Transitions are path/edges when one state passe...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"State diagrams\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-18T14:48:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/%E5%B7%A5%E5%85%B7/State%20diagrams.html"}],["meta",{"property":"og:title","content":"State diagrams"}],["meta",{"property":"og:description","content":"State diagrams States 定义状态的三种方式： 直接定义状态名称：stateName state \\"description\\" as stateName stateName : description Transitions [!quote] Transitions are path/edges when one state passe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-18T14:48:16.000Z"}],["meta",{"property":"article:tag","content":"StateDiagrams"}],["meta",{"property":"article:tag","content":"Mermaid"}],["meta",{"property":"article:modified_time","content":"2025-08-18T14:48:16.000Z"}]]},"git":{"createdTime":1755528496000,"updatedTime":1755528496000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":1,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":0.95,"words":286},"filePathRelative":"工具/State diagrams.md","excerpt":"","autoDesc":true}');export{u as comp,b as data};
