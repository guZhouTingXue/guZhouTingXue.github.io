import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as i,f as n,r as e,o as h}from"./app-BVFJhkBn.js";const d="/assets/%E9%81%A5%E6%8E%A7-CKR78NAt.webp",k="/assets/%E9%81%A5%E6%8E%A7-1-BGqalmfa.webp",p={};function r(A,s){const a=e("Mermaid");return h(),l("div",null,[s[0]||(s[0]=i('<h1 id="遥控" tabindex="-1"><a class="header-anchor" href="#遥控"><span>遥控</span></a></h1><p>Process information in control direction - 控制方向的过程信息</p><table><thead><tr><th>TypeID 值</th><th>简称</th><th>全称</th><th>说明</th></tr></thead><tbody><tr><td>45</td><td>C_SC_NA_1</td><td>single commad</td><td>单点命令</td></tr><tr><td>46</td><td>C_DC_NA_1</td><td>double command</td><td>双点命令</td></tr><tr><td>58</td><td>C_SC_TA_1</td><td>single command with time tag CP56Time2a</td><td>带56 时标的单点命令</td></tr><tr><td>。。。</td><td></td><td></td><td></td></tr></tbody></table><h2 id="s-e-过程" tabindex="-1"><a class="header-anchor" href="#s-e-过程"><span>s/e 过程</span></a></h2><p>对于C_SC(包含C_SC_NA_1 和 C_SC_TA_1)、C_DC、C_RC 它们包含了select 和 execute 两个过程。</p>',5)),n(a,{code:"eJwrTi0sTc1LTnXJTEwvSszlOrRAAYgKEotKMpMzCxLzShSS8/NKivJzcjLz0hUSixWe7Nj9fPVMPOpSU0DKnq6dAFIGVYdshq6dHZJaK4WXjUuf9S1/2dD5rHvl04l7n+xeooCmC2iiLrIuoClAbWANzxeue7FuCVQ9lErMKSHa2medy18s7IFYS4ytEPXYbE3NKU4lbO2zSUteTmkgwT6wehT7UvNSuACMDMhV"}),s[1]||(s[1]=i(`<h2 id="单点遥控" tabindex="-1"><a class="header-anchor" href="#单点遥控"><span>单点遥控</span></a></h2><h3 id="sco-single-command" tabindex="-1"><a class="header-anchor" href="#sco-single-command"><span>SCO single command</span></a></h3><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>含义</td><td>-</td><td>-</td><td>-</td><td>QOC<br>qualifier of command</td><td>-</td><td>-</td><td>RES</td><td>SCS</td></tr><tr><td>名称</td><td>S/E</td><td>-</td><td>-</td><td>QU</td><td>-</td><td>-</td><td>RESERVE</td><td>single command state</td></tr><tr><td>说明</td><td>1 := select; 0 := execute</td><td></td><td></td><td></td><td></td><td></td><td></td><td>0 := OFF； 1 := ON</td></tr></tbody></table><table><thead><tr><th>QU</th><th>含义</th></tr></thead><tbody><tr><td>0</td><td>no additional definition</td></tr><tr><td>1</td><td>short pulse duration (circuit-breaker), duration determined by a system parameter in the outstation</td></tr><tr><td>2</td><td>long pulse duration</td></tr><tr><td>3</td><td>persistent output，持续输出，直到接收执行相反状态命令</td></tr><tr><td>4...31</td><td></td></tr></tbody></table><p>short pulse 和 long pulse 的持续时间有远方终端系统参数决定</p><h3 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h3><p>创建</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs101_information_objects.c"><span>cs101_information_objects.c</span></div><div class="language-cpp line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="cpp" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">SingleCommand</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SingleCommand_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SingleCommand self, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> command, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selectCommand, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qu)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (SingleCommand) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GLOBAL_MALLOC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sizeof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(struct sSingleCommand));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (self) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        SingleCommand_initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(self);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">objectAddress</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        uint8_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sco </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((qu </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (command) sco </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|=</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (selectCommand) sco </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|=</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sco</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sco;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> self;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></div><p>发送选择/执行：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    SingleCommand sc;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sc </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SingleCommand_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ioa, command, selectCommand, qu);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameters </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS104_Connection_getAppLayerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CS101_ASDU asdu </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS101_ASDU_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(parameters, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, CS101_COT_ACTIVATION, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS101_ASDU_addInformationObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu, (InformationObject) sc);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS104_Connection_sendASDU</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con, asdu);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    SingleCommand_destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sc);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS101_ASDU_destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>行号</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td>1、2</td><td>创建单点遥信命令对象</td><td></td></tr><tr><td>3</td><td>获取连接参数</td><td></td></tr><tr><td>4</td><td>根据应用参数创建asdu</td><td>COT 为ACTIVATION</td></tr><tr><td>5</td><td>asdu中添加信息元素-single command</td><td></td></tr><tr><td>6</td><td>发送命令</td><td></td></tr></tbody></table><p>发送撤销：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    SingleCommand sc;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sc </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SingleCommand_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ioa, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameters </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS104_Connection_getAppLayerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CS101_ASDU asdu </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS101_ASDU_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(parameters, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, CS101_COT_DEACTIVATION, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>asdu 的COT 为 DEACTIVATION</p><p>问题：<mark style="background:#FFF3A3A6;">撤销选择时SCO 有作用吗？</mark><br> 在我看来选择时的参数SCO 对撤销没有影响（即接收到撤销命令后忽略SCO参数），只要撤销的对象确定了，那么该对象都恢复为初始状态。<br> 所有命令中的SE 及 command 都设置成了false，没有取select 相同值</p><h3 id="界面" tabindex="-1"><a class="header-anchor" href="#界面"><span>界面</span></a></h3><figure><img src="`+d+'" alt="|382x283" tabindex="0" loading="lazy"><figcaption>|382x283</figcaption></figure><h2 id="状态" tabindex="-1"><a class="header-anchor" href="#状态"><span>状态</span></a></h2>',18)),n(a,{code:"eJwrLkksSXXJTEwvSszVLTPiOrRAAYjAogpKTzvmPl3eraSQWKyQlJqemYcq+7Kh88mOtWDZ4tSc1OSS1BRUBc86l79Y2ANWkFqRmlxaksoFVQA2TUFX1w6u00rh2ZRtTzs2AA191r3y6cS9T3Yveb+n5+nseU+X9EIEny9c92LdEpgVUH1gQ6Cmw8yA2AsxA6ocqgKsGmw5UC1E1bqeZ+unwm1CFsRmE1Tv07beZ2sWYroYjxao0yYteTmlgaDiF9tan03f9mzOKmQP6aNoBgDtd93u"}),s[2]||(s[2]=i(`<blockquote><p>[!quote]<br> 同一遥控点号只允许一个主站进行操作<br> 严格按照选择-》执行/撤销的过程执行，且只允许被选择一次，选择之后再次接收到选择命令应当认为指令错误并恢复到未选择之前的初始状态<br> 选择之后应该在规定时间内接收执行或撤销命令，超时未收到恢复到选择之前初始状态</p></blockquote><p>只允许一个主站进行操作：接收到一个主站的命令后忽略其他主站的命令</p><p>问：<mark style="background:#FFF3A3A6;">执行 和 选择的参数是否要求相同？</mark><br> 我认为除了S/E 标志外其余参数应该完全一致，执行参数和选择参数不一致的应该拒绝执行（保持选中状态 或 恢复到初始状态 应该是可选的）</p><h2 id="双点遥控" tabindex="-1"><a class="header-anchor" href="#双点遥控"><span>双点遥控</span></a></h2><h3 id="dco-double-command" tabindex="-1"><a class="header-anchor" href="#dco-double-command"><span>DCO Double command</span></a></h3><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>含义</td><td>QOC =<br>qualifier of command</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>DCS</td><td>-</td></tr><tr><td>名称</td><td>S/E</td><td>QU</td><td>-</td><td>-</td><td>-</td><td>-</td><td>double command state</td><td></td></tr><tr><td>说明</td><td>1 := select; 0 := execute</td><td></td><td></td><td></td><td></td><td></td><td>0:= not permitted; 1:= OFF; 2:=ON; 3:= not permitted</td><td></td></tr></tbody></table><h3 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1"><span>实现</span></a></h3><p>创建</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs101_information_objects"><span>cs101_information_objects</span></div><div class="language-cpp line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="cpp" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">DoubleCommand</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DoubleCommand_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(DoubleCommand self, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> command, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selectCommand, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qu)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (DoubleCommand) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GLOBAL_MALLOC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sizeof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(struct sDoubleCommand));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (self) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        DoubleCommand_initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(self);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">objectAddress</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        uint8_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dcq </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((qu </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        dcq </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">uint8_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (command </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">03</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (selectCommand) dcq </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|=</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dcq</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dcq;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> self;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></div><p>发送选择/执行</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> CS104Connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sendDoubleCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ioa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> selectCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> qu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    qDebug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> __FUNCTION__ </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; ioa:&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ioa </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; command:&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> command</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">             &lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; selectCommand:&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selectCommand </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; qu:&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qu;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DoubleCommand sc;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sc </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DoubleCommand_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ioa, command, selectCommand, qu);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameters </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS104_Connection_getAppLayerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CS101_ASDU asdu </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS101_ASDU_create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(parameters, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, CS101_COT_ACTIVATION, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS101_ASDU_addInformationObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu, (InformationObject) sc);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS104_Connection_sendASDU</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(m_con, asdu);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    DoubleCommand_destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sc);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    CS101_ASDU_destroy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asdu);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：command 的类型为int<br> 发送撤销：略</p><h3 id="界面-1" tabindex="-1"><a class="header-anchor" href="#界面-1"><span>界面</span></a></h3><p><img src="`+k+'" alt="" loading="lazy"><br> 和single command 的差别：Value 值不同</p><p>问题：<mark style="background:#FFF3A3A6;">是根据类型修改single command 使用的控件，还是单独创建另一个界面，在界面之间进行切换？</mark><br> 这里可以只修改设置value 的comboBox。single command 和 double command 共用同一个控件时注意值的范围。如，在double 下设置value 为2，超出范围后要给定一个默认值。或者切换类型同时设置一个默认值。</p>',15))])}const B=t(p,[["render",r]]),o=JSON.parse('{"path":"/IEC%2060870-5-104/%E9%81%A5%E6%8E%A7.html","title":"遥控","lang":"zh-CN","frontmatter":{"category":"IEC 60870-5-104","description":"遥控 Process information in control direction - 控制方向的过程信息 s/e 过程 对于C_SC(包含C_SC_NA_1 和 C_SC_TA_1)、C_DC、C_RC 它们包含了select 和 execute 两个过程。 单点遥控 SCO single command short pulse 和 long p...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"遥控\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-16T14:29:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/IEC%2060870-5-104/%E9%81%A5%E6%8E%A7.html"}],["meta",{"property":"og:title","content":"遥控"}],["meta",{"property":"og:description","content":"遥控 Process information in control direction - 控制方向的过程信息 s/e 过程 对于C_SC(包含C_SC_NA_1 和 C_SC_TA_1)、C_DC、C_RC 它们包含了select 和 execute 两个过程。 单点遥控 SCO single command short pulse 和 long p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-16T14:29:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-16T14:29:47.000Z"}]]},"git":{"createdTime":1757857333000,"updatedTime":1758032987000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":3,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":3.82,"words":1146},"filePathRelative":"IEC 60870-5-104/遥控.md","excerpt":"","autoDesc":true}');export{B as comp,o as data};
