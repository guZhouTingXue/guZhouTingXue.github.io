import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as A,a as i,b as g,d as l,f as h,w as a,r as d,o as B,e as k}from"./app-BfwbC3B8.js";const c="/assets/%E7%9F%AD%E5%B8%A7%E6%8A%A5%E6%96%87-C5sNU-B5.webp",y="/assets/%E7%9F%AD%E5%B8%A7%E6%8A%A5%E6%96%87-1-mLax-IRd.webp",o="/assets/%E7%9F%AD%E5%B8%A7%E6%8A%A5%E6%96%87-2-BG4aeauI.webp",u={};function b(v,s){const e=d("Mermaid"),p=d("Tabs");return B(),A("div",null,[s[7]||(s[7]=i("h1",{id:"短帧报文",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#短帧报文"},[i("span",null,"短帧报文")])],-1)),s[8]||(s[8]=i("blockquote",null,[i("p",null,"只传输APCI 的报文")],-1)),g(" more "),s[9]||(s[9]=l('<p>分类：</p><ul><li>Information Transmit Format: I格式，信息传输功能</li><li>Numbered supervisory functions: S格式，带编号的监视功能</li><li>Unnumbered control function: U格式，未编号的控制功能</li></ul><h2 id="报文结构" tabindex="-1"><a class="header-anchor" href="#报文结构"><span>报文结构</span></a></h2><figure><img src="'+c+'" alt="|426x430" tabindex="0" loading="lazy"><figcaption>|426x430</figcaption></figure><h2 id="u帧-未编号的控制功能" tabindex="-1"><a class="header-anchor" href="#u帧-未编号的控制功能"><span>U帧-未编号的控制功能</span></a></h2><p>连接建立后控制站和被控站都处于STOPPED状态。</p><blockquote><p>[!quote]<br> 在这种状态下，除了未编号的控制功能 和 对这些功能的确认，被控站不通过这个连接发送任何数据。控制站应通过这个连接发送STARTDT激活指令激活这个连接中的用户数据传输。被控站用STARTDT确认响应这个命令。</p></blockquote><p>U帧报文有三种功能：</p><ul><li>启动/确认数据传输</li><li>停止/确认数据传输</li><li>防止假在线的测试/确认</li></ul><h3 id="报文格式" tabindex="-1"><a class="header-anchor" href="#报文格式"><span>报文格式</span></a></h3><p><img src="'+y+'" alt="|506x183" loading="lazy"><br> 控制站发送命令，被控站发送确认。对应的bit 为1表示有效。同一时刻，3种功能只有一个可以生效。</p><h3 id="启动数据传输-startdt" tabindex="-1"><a class="header-anchor" href="#启动数据传输-startdt"><span>启动数据传输-STARTDT</span></a></h3><p>连接连接后</p>',13)),h(p,{data:[{id:"正常的启动流程"},{id:"异常-超时"}]},{title0:a(({value:t,isActive:n})=>s[0]||(s[0]=[k("正常的启动流程",-1)])),title1:a(({value:t,isActive:n})=>s[1]||(s[1]=[k("异常-超时",-1)])),tab0:a(({value:t,isActive:n})=>[h(e,{code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRcM7PKynKz8lJLVJILFZ41rf8ace256tnoqhxSgXJvVi0GigNkkPo0bWzc0q1UggOcQwKcQnhSkwuySxLLElFMhUh5pTKBTRIF6gFSRqqNyVE4fnCdS/WLeFKSUXWgMRDMhIAYfZRrw=="})]),tab1:a(({value:t,isActive:n})=>[h(e,{code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRcM7PKynKz8lJLVJILFZ41rf8ace256tnoqhxSgXJvVi0GigNkkPo0bWzc0q1UggOcQwKcQnhSkwuySxLLElFMhVT8dPWzS+nr32xf96zvqVcKanY9AAAvCJKBw=="}),s[2]||(s[2]=i("p",null,"控制站发送STARTDT后启动计时器t1，在t1时间内未收到STARTDT确认判定为超时。超时后控制站主动断开连接。",-1))]),_:1}),s[10]||(s[10]=l(`<h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h4><p>报文定义：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> uint8_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> STARTDT_ACT_MSG[] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">68</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">04</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">07</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> };</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> STARTDT_ACT_MSG_SIZE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>发送：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS104_Connection_sendStartDT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS104_Connection self);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="s帧-带编号的监视功能" tabindex="-1"><a class="header-anchor" href="#s帧-带编号的监视功能"><span>S帧-带编号的监视功能</span></a></h2><h3 id="报文格式-1" tabindex="-1"><a class="header-anchor" href="#报文格式-1"><span>报文格式</span></a></h3><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>位组1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>位组2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>0</td><td>-</td><td>-</td><td>-</td></tr><tr><td>位组3</td><td>-</td><td>-</td><td>-</td><td>接收序列号 LSB</td><td>-</td><td>-</td><td>-</td><td>0</td></tr><tr><td>位组4</td><td>-</td><td>-</td><td>-</td><td>接收序列号 MSB</td><td>-</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><div class="hint-container note"><p class="hint-container-title">注</p><p>&quot;应用技术中3.3.1 节说明的S帧包含了接收序列号、发送序列号“ 是错误的，S格式</p></div><h3 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1"><span>实现</span></a></h3><p>简单的看了下库中源代码，没办法直接获取获取到序列号。<br> 接收数据后的处理流程：</p>`,11)),h(e,{code:"eJxLL0osyFDwCeLiLEpN1lB61rf02ZRtz6ZueNa77mnHBiBDIamyJLU4KDVZwU7BQEkTqC6x3CMxLyUntShaCcj2TS0uTkxPhQppaCo8nT3vxYZmpVguzuSM1ORsqHy00rPFDS9X9TzrWvpsWjtINq0oMTfVLb8oN7GkWulpx5Jn09ZCJJ9v3P10XrdSLRenZ7TSi77tT/unAd30tH/i0139T/u3g/R6BqcWlqbmJaf6leYmpRbB9EMUPJux/umEZc/WLn6+cB3IFMdgl9BooIrZT3fvArFBBiQWp5QifJGanJpZlpqCxQ/gYNHVtUN4GshB9heQi+QRIK/G8+mO5TWeQBaaI4EiINuBFJLlXAAZMqdg"}),s[11]||(s[11]=l(`<p>问题：</p><ol><li>处理raw 时报文还没有通过检测，可能不是有效数据。</li><li>asdu 结构只包含了asdu部分，不涉及apci，没办法直接获取到序列号</li></ol><p>创建asdu：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs104_connection.c / checkMessage()"><span>cs104_connection.c / checkMessage()</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        CS101_ASDU asdu </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CS101_ASDU_createFromBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((CS101_AppLayerParameters)</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">alParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), buffer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, msgSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>buffer：接收报文<br> apci 的长度固定为6直接，跳过apci，剩余的部分就是asdu</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="CS101_ASDU_createFromBuffer"><span>CS101_ASDU_createFromBuffer</span></div><div class="language-cpp line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="cpp" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CS101_ASDU</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_createFromBuffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_AppLayerParameters parameters, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">uint8_t*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msgLength)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asduHeaderLength </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfCOT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sizeOfCA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (msgLength </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asduHeaderLength)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CS101_ASDU self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (CS101_ASDU) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GLOBAL_MALLOC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">sizeof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(struct sCS101_ASDU));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (self </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">!=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">parameters</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameters;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asdu</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">asduHeaderLength</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asduHeaderLength;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">payload</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asduHeaderLength;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">payloadSize</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msgLength </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> asduHeaderLength;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> self;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></div><table><thead><tr><th>行号</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td>4</td><td>计算asdu中第一个信息元素前的直接长度</td><td>包含TypeId（1），VSQ（1），COT 和 CA</td></tr><tr><td>14、15</td><td>存储asdu报文位置 和 head长度</td><td></td></tr><tr><td>17、18</td><td>payload 指的是asdu中的所有信息元素</td><td></td></tr></tbody></table><p>收到报文后报文数据是存储在循环数组中，asdu中又存储了它在原始报文中位置，所以可以根据将self-&gt;asdu向前移动获取到实际接收到报文的数据。</p><p>库提供的接口：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="iec60870_common.h"><span>iec60870_common.h</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">uint8_t*</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS101_ASDU_getPayload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS101_ASDU self);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>只提供了获取payload的方法</p><p>获取ASDU head 配置参数</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs104_connection.h"><span>cs104_connection.h</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CS101_AppLayerParameters</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CS104_Connection_getAppLayerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CS104_Connection self);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>结合以上信息，可以在asduReceivedHandler（）中解析处序号<br> 获取到报文：将asdu 中的payload 向前移动 headLength + 6<br> 结合wireshark 抓包，查看报文是否一致，验证是否正确获取到原始报文数据。<br> wireShark捕获：<br><img src="`+o+`" alt="" loading="lazy"><br> 程序打印：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="output"><span>output</span></div><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>68 12 aa 00 00 00 0d 01 01 00</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>两者相符，获取到的原始报文数据正确。</p><p>解析：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seqNo </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> buffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是这里S帧属于短帧报文，不包含asdu，不能在asduReceivedHandler中处理。<br> 直接在raw中处理S帧的接收序号。</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rawMessageHandler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">void*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> parameter, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">uint8_t*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msg, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msgSize, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sent)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sent </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (msgSize </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">        &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">68</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">        &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">04</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">        &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">==</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seqNo </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> msg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        qDebug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;seqNo:&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seqNo;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能</span></a></h3><blockquote><p>[!quote]<br> 如只在一个方向进行较长（时间）的数据传输，应在另一个方向发送S格式认可这些APDU</p></blockquote><p>当控制站持续接收被控站的数据时，如果期间没有控制站没有发送I格式报文（通常是命令），那么需要发送S格式，用来告知被控站已经成功接收了哪些数据。</p><p>特点：控制站发送、只包含接收序号<br> 已启动传输条件下：</p>`,24)),h(p,{data:[{id:"未受干扰"},{id:"收到干扰（异常）"}]},{title0:a(({value:t,isActive:n})=>s[3]||(s[3]=[k("未受干扰",-1)])),title1:a(({value:t,isActive:n})=>s[4]||(s[4]=[k("收到干扰（异常）",-1)])),tab0:a(({value:t,isActive:n})=>[h(e,{code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRcM7PKynKz8lJLVJILFZ41rf8ace256tnoqhxSgXJvVi0GigNkgPyde3skLRaKXhqGOgYaGKXMcQpYwSSQXKBLkiJU6qVQrCGsSYXAJEcQFs="}),s[5]||(s[5]=i("pre",null,[i("code",null,`被控站发送3帧I，控制站回复一针s
`)],-1))]),tab1:a(({value:t,isActive:n})=>s[6]||(s[6]=[i("p",null,null,-1)])),_:1}),s[12]||(s[12]=l(`<h2 id="i帧-信息传输" tabindex="-1"><a class="header-anchor" href="#i帧-信息传输"><span>I帧-信息传输</span></a></h2><h3 id="报文格式-2" tabindex="-1"><a class="header-anchor" href="#报文格式-2"><span>报文格式</span></a></h3><table><thead><tr><th>bit</th><th>8</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>位组1</td><td>-</td><td>-</td><td>-</td><td>发送序列号 LSB</td><td>-</td><td>-</td><td>-</td><td>0</td></tr><tr><td>位组2</td><td>-</td><td>-</td><td>-</td><td>发送序列号 MSB</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td>位组3</td><td>-</td><td>-</td><td>-</td><td>接收序列号 LSB</td><td>-</td><td>-</td><td>-</td><td>0</td></tr><tr><td>位组4</td><td>-</td><td>-</td><td>-</td><td>接收序列号 MSB</td><td>-</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h3 id="实现-2" tabindex="-1"><a class="header-anchor" href="#实现-2"><span>实现</span></a></h3><div class="code-block-with-title"><div class="code-block-title-bar" data-title="cs104_connection.c/checkMessage()"><span>cs104_connection.c/checkMessage()</span></div><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> frameSendSequenceNumber </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((buffer [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (buffer [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">fe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> frameRecvSequenceNumber </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((buffer [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (buffer [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">fe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div>`,5))])}const F=r(u,[["render",b]]),C=JSON.parse('{"path":"/IEC%2060870-5-104/%E7%9F%AD%E5%B8%A7%E6%8A%A5%E6%96%87.html","title":"短帧报文","lang":"zh-CN","frontmatter":{"category":"IEC 60870-5-104","description":"只传输APCI 的报文","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"短帧报文\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-31T13:58:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mingStudent\\"}]}"],["meta",{"property":"og:url","content":"https://guzhoutingxue.github.io/IEC%2060870-5-104/%E7%9F%AD%E5%B8%A7%E6%8A%A5%E6%96%87.html"}],["meta",{"property":"og:title","content":"短帧报文"}],["meta",{"property":"og:description","content":"只传输APCI 的报文"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-31T13:58:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-31T13:58:06.000Z"}]]},"git":{"createdTime":1756050041000,"updatedTime":1756648686000,"contributors":[{"name":"guZhouTingXue","username":"guZhouTingXue","email":"2422173022@qq.com","commits":2,"url":"https://github.com/guZhouTingXue"}]},"readingTime":{"minutes":4.57,"words":1372},"filePathRelative":"IEC 60870-5-104/短帧报文.md","excerpt":"\\n<blockquote>\\n<p>只传输APCI 的报文</p>\\n</blockquote>\\n","autoDesc":true}');export{F as comp,C as data};
